version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - server
    environment:
      - NEXT_PUBLIC_API_URL=http://server:4000/api
    volumes:
      - ./client:/app
      - /app/node_modules

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rehearsal_scheduler
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=dev_secret_key
      - JWT_EXPIRES_IN=7d
    volumes:
      - ./server:/app
      - /app/node_modules

  postgres:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rehearsal_scheduler
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: